[{"D:\\devcamp\\src\\Shop.js":"1","D:\\devcamp\\src\\Upload.js":"2","D:\\devcamp\\src\\ProductDetail.js":"3","D:\\devcamp\\src\\Storage.js":"4","D:\\devcamp\\src\\components\\DownloadList.js":"5","D:\\devcamp\\src\\components\\UploadList.js":"6","D:\\devcamp\\src\\Account.js":"7","D:\\devcamp\\src\\App.js":"8"},{"size":3350,"mtime":1606892687981,"results":"9","hashOfConfig":"10"},{"size":5304,"mtime":1606905667604,"results":"11","hashOfConfig":"10"},{"size":3539,"mtime":1606905740257,"results":"12","hashOfConfig":"10"},{"size":1557,"mtime":1606903701630,"results":"13","hashOfConfig":"10"},{"size":1513,"mtime":1606903994202,"results":"14","hashOfConfig":"10"},{"size":1551,"mtime":1606903979932,"results":"15","hashOfConfig":"10"},{"size":6503,"mtime":1606910512984,"results":"16","hashOfConfig":"10"},{"size":1340,"mtime":1606905503237,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"2xagdc",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\devcamp\\src\\Shop.js",["39","40","41","42","43"],"D:\\devcamp\\src\\Upload.js",["44","45"],"import React from 'react'\r\nimport { auth, db, store } from './firebase'\r\nimport Navbar from './components/Navbar'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Input, Textarea\r\n    , Box\r\n} from \"@chakra-ui/react\"\r\n\r\nimport './css/App.css'\r\n\r\nconst Upload = () => {\r\n    const [subject_code, setSubjectCode] = useState()\r\n    const [subject_name, setSubjectName] = useState()\r\n    const [description, setDescription] = useState()\r\n    const subjectCode = (e) => {\r\n        setSubjectCode(e.target.value)\r\n    }\r\n    const _description = (e) => {\r\n        setDescription(e.target.value)\r\n    }\r\n    const subjectName = (e) => {\r\n        setSubjectName(e.target.value)\r\n    }\r\n    const [file, setFile] = useState()\r\n    const [img, setImg] = useState()\r\n    const [name, setName] = useState()\r\n    const history = useHistory()\r\n    const Choose = event => {\r\n        const _file = event.target.files[0]\r\n        if (_file !== null) {\r\n            setFile(_file)\r\n        }\r\n    }\r\n    const UpImage = event => {\r\n        const _img = event.target.files[0]\r\n        if (_img !== null) {\r\n            setImg(_img)\r\n        }\r\n    }\r\n\r\n\r\n    db.ref(`/users/${localStorage.uid}`).once('value').then((snapshot) => {\r\n        setName(snapshot.val().name)\r\n    })\r\n\r\n    async function Upload() {\r\n        const file_ref = store.ref(localStorage.uid).child(file.name)\r\n        await file_ref.put(file)\r\n        const file_url = await file_ref.getDownloadURL()\r\n        console.log(file_url)\r\n        console.log(subject_code)\r\n\r\n        const img_ref = store.ref(subject_code).child(img.name)\r\n        await img_ref.put(img)\r\n        const img_url = await img_ref.getDownloadURL()\r\n\r\n        console.log(`/users/${localStorage.uid}/upload/${subject_code}`)\r\n\r\n        console.table({\r\n            subjectCode: subject_code,\r\n            fileUrl: file_url,\r\n            uid: auth.currentUser.uid,\r\n            name: subject_name,\r\n            description: description,\r\n            imgUrl: img_url,\r\n            author: name\r\n        })\r\n\r\n\r\n        await db.ref(`/users/${localStorage.uid}/upload/${subject_code}`).set({\r\n            subjectCode: subject_code,\r\n            fileUrl: file_url,\r\n            uid: auth.currentUser.uid,\r\n            name: subject_name,\r\n            description: description,\r\n            imgUrl: img_url,\r\n            author: name\r\n        })\r\n        await db.ref(`/file/${subject_code}`).set({\r\n            subjectCode: subject_code,\r\n            fileUrl: file_url,\r\n            uid: auth.currentUser.uid,\r\n            name: subject_name,\r\n            description: description,\r\n            imgUrl: img_url,\r\n            author: name\r\n        })\r\n        alert('Upload Success')\r\n    }\r\n\r\n    const Back = () => {\r\n        history.replace('/account')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <br></br>\r\n\r\n            <FormControl id=\"subject-Code\">\r\n                <FormLabel className=\"text1\"> รหัสวิชา</FormLabel>\r\n                <Box ml=\"20px\" width=\"300px\">\r\n                    <Input className=\"inputBox2\" placeholder=\"ระบุรหัสวิชา\" type='text' onChange={subjectCode} />\r\n                </Box>\r\n            </FormControl>\r\n\r\n            <br></br>\r\n\r\n            <FormControl id=\"subject-Name\">\r\n                <FormLabel className=\"text1\"> ชื่อวิชา</FormLabel>\r\n                <Box ml=\"20px\" width=\"300px\">\r\n                    <Input placeholder=\"ระบุชื่อวิชา\" type='text' onChange={subjectName} />\r\n                </Box>\r\n            </FormControl>\r\n            \r\n            <br></br>\r\n\r\n            <FormControl id=\"subject-Code\">\r\n                <FormLabel className=\"text1\"> รายละเอียด</FormLabel>\r\n\r\n                {/* <Input className=\"inputBox2\" placeholder=\"รายละเอียด\" type='text' onChange={_description} /> */}\r\n\r\n\r\n                <Box ml=\"20px\" width=\"300px\">\r\n                    <Textarea placeholder=\"รายละเอียด\" type='text' onChange={_description} />\r\n                    {/* <Input className=\"inputBox2\" placeholder=\"รายละเอียด\" type='text' onChange={_description} /> */}\r\n                </Box>\r\n            </FormControl>\r\n\r\n            <br></br>\r\n\r\n            <FormLabel className=\"text1\"> เลือกรูปหน้าปก</FormLabel>\r\n            <input style={{ paddingLeft: \"2rem\" }} type=\"file\" onChange={UpImage} />\r\n\r\n            <br></br><br></br>\r\n\r\n            <FormLabel className=\"text1\">อัปโหลดไฟล์</FormLabel>\r\n            <input style={{ paddingLeft: \"2rem\" }} type=\"file\" id=\"file_choose\" onChange={Choose} />\r\n\r\n            {/* <input type=\"file\" id=\"file_choose\" onChange={Choose}/> */}\r\n            {/* <br></br><br></br> */}\r\n\r\n\r\n\r\n            <br></br>\r\n            <div align=\"center\">\r\n                <button className=\"cancel1\" id=\"file_upload\" onClick={Upload}>อัปโหลด</button>\r\n\r\n\r\n                <button className=\"cancel2\" onClick={Back}>ย้อนกลับ</button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upload","D:\\devcamp\\src\\ProductDetail.js",["46","47","48","49","50"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Navbar from './components/Navbar'\r\nimport { db } from './firebase'\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Input,\r\n    Box, Image, AspectRatio\r\n} from \"@chakra-ui/react\"\r\n\r\nconst ProductDetail = () => {\r\n\r\n    const params = useParams()\r\n    const productID = params.productId\r\n\r\n    const history = useHistory()\r\n\r\n    const [detail, setDetail] = useState({\r\n        name: '',\r\n        subjectCode: '',\r\n        author: '',\r\n        fileUrl: '',\r\n        description: '',\r\n        imgUrl: ''\r\n    })\r\n\r\n    const fetchDetail = async () => {\r\n        db.ref(`/file/${productID}`).once('value', snapshot => {\r\n            const data = snapshot.val()\r\n            console.log(data)\r\n            if (data) {\r\n                setDetail({\r\n                    name: data.name,\r\n                    subjectCode: data.subjectCode,\r\n                    author: data.author,\r\n                    fileUrl: data.fileUrl,\r\n                    description: data.description,\r\n                    imgUrl: data.imgUrl\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchDetail()\r\n    }, [])\r\n\r\n    function goBack() {\r\n        history.replace('/shop')\r\n    }\r\n\r\n    function goBuy(productID) {\r\n        history.replace(`/shop/${productID}/buy`)\r\n    }\r\n\r\n    console.log(detail.imgUrl)\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n\r\n            <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" align=\"center\" pt=\"5\">\r\n                <AspectRatio maxW=\"200px\" ratio={1}>\r\n                    <Image src={detail.imgUrl} />\r\n                </AspectRatio>\r\n\r\n                <Box p=\"6\">\r\n                    <Box d=\"flex\" alignItems=\"baseline\">\r\n\r\n                        <Box\r\n                            color=\"gray.900\"\r\n                            fontWeight=\"semibold\"\r\n                            letterSpacing=\"wide\"\r\n                            fontSize=\"xs\"\r\n                            textTransform=\"uppercase\"\r\n                            ml=\"2\"\r\n                        >\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <Box\r\n                        mt=\"1\"\r\n                        fontWeight=\"semibold\"\r\n                        as=\"h4\"\r\n                        lineHeight=\"tight\"\r\n                        isTruncated\r\n                    >\r\n                        <FormLabel className=\"text1\"> ชื่อวิชา :  {detail.name} </FormLabel>\r\n                        <FormLabel className=\"text1\"> รหัสวิชา :  {detail.subjectCode} </FormLabel>\r\n\r\n                        <FormLabel className=\"text1\"> ผู้เขียน :  {detail.author} </FormLabel>\r\n                        <FormLabel className=\"text1\"> รายละเอียด :  {detail.description} </FormLabel>\r\n\r\n\r\n                    </Box>\r\n\r\n\r\n                </Box>\r\n            </Box>\r\n\r\n\r\n            <br></br>\r\n            <div align=\"center\">\r\n                <strong className=\"price\" > 50 บาท</strong>\r\n            </div>\r\n\r\n            <div align=\"center\">\r\n                <button className=\"cancel1\" onClick={() => goBuy(productID)}>ซื้อสินค้า</button>\r\n\r\n                <button className=\"cancel2\" onClick={goBack}>ย้อนกลับ</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductDetail","D:\\devcamp\\src\\Storage.js",["51","52","53"],"D:\\devcamp\\src\\components\\DownloadList.js",["54","55"],"import React, { useEffect, useState } from 'react'\r\nimport { db } from './../firebase'\r\nimport './../App.css'\r\n\r\nfunction DownloadList() {\r\n\r\n    const [downloadList, setDownloadList] = useState({\r\n        subject_code: []\r\n    })\r\n\r\n    const fetchDownload = async () => {\r\n        db.ref(`/users/${localStorage.uid}/download/`).on('value', snapshot => {\r\n            const data = snapshot.val()\r\n            console.log(data)\r\n            if (data) {\r\n                setDownloadList({\r\n                    subject_code: Object.keys(data),\r\n                    data: data\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDownload()\r\n    }, db.ref(`/users/${localStorage.uid}/download/`))\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n\r\n                {downloadList.subject_code.map((key, index) => {\r\n                    return (<>\r\n                        <li key={index}>{`รหัสวิชา : ${key}`} \r\n                        <br></br>\r\n                        ชื่อวิชา : {downloadList.data[key].name}\r\n        \r\n                            <br></br>\r\n                            <a className=\"download\" lassName='dowload2' onClick={() => window.location.href = downloadList.data[key].fileUrl}>ดาวน์โหลด</a>\r\n                        </li>\r\n                        <hr></hr></>\r\n                    )\r\n                })\r\n                }\r\n\r\n            </div >\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default DownloadList","D:\\devcamp\\src\\components\\UploadList.js",["56","57"],"import React, { useEffect, useState } from 'react'\r\nimport { db } from './../firebase'\r\nimport './../App.css'\r\n\r\nfunction UploadList({ authCode }) {\r\n\r\n    const [uploadList, setUploadList] = useState({\r\n        subject_code: []\r\n    })\r\n\r\n    const fetchUpload = async () => {\r\n        const uid = localStorage.getItem('uid')\r\n        db.ref(`/users/${uid}/upload/`).on('value', snapshot => {\r\n            const data = snapshot.val()\r\n            console.log(data)\r\n            if (data) {\r\n                setUploadList({\r\n                    subject_code: Object.keys(data),\r\n                    data: data\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUpload()\r\n    }, db.ref(`/users/${localStorage.getItem('uid')}/upload/`))\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n\r\n                {uploadList.subject_code.map((key, index) => {\r\n                    return (\r\n                        <>\r\n\r\n                            <li key={index}>{`รหัสวิชา : ${key}`} \r\n                            <br></br>\r\n                             ชื่อวิชา : {uploadList.data[key].name} \r\n\r\n\r\n                            <br></br>\r\n                                <a className='download' onClick={() => window.location.href = uploadList.data[key].fileUrl}>ดาวน์โหลด</a>\r\n                            </li>\r\n                            <hr></hr></>)\r\n                })\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default UploadList","D:\\devcamp\\src\\Account.js",["58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { auth, db } from './firebase'\r\nimport Navbar from './components/Navbar'\r\nimport './css/App.css'\r\nimport {\r\n    Menu,\r\n    MenuButton,\r\n    MenuList,\r\n    MenuItem,\r\n    MenuItemOption,\r\n    useDisclosure,\r\n    MenuGroup,\r\n    MenuOptionGroup,\r\n    MenuIcon,\r\n    MenuCommand,\r\n    MenuDivider, Button, Stack, Center,\r\n    Drawer,\r\n    DrawerBody,\r\n    DrawerFooter,\r\n    DrawerHeader,\r\n    DrawerOverlay,\r\n    DrawerContent,\r\n    DrawerCloseButton,\r\n} from \"@chakra-ui/react\"\r\n\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Input,\r\n    Box, Image, AspectRatio\r\n} from \"@chakra-ui/react\"\r\n\r\n\r\nconst Profile = () => {\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        uid: '',\r\n        qr_bank: ''\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(function (currentUser) {\r\n            if (currentUser) {\r\n                console.log(currentUser)\r\n                db.ref('/users/' + auth.currentUser.uid).once('value').then((snapshot) => {\r\n                    setUser({\r\n                        name: snapshot.val().name,\r\n                        qr_bank: snapshot.val().qr_bank,\r\n                        email: snapshot.val().email,\r\n                        uid: auth.currentUser.uid\r\n                    })\r\n                    localStorage.setItem('uid', auth.currentUser.uid)\r\n                })\r\n            }\r\n        })\r\n    }, [auth])\r\n    function logout() {\r\n        auth.signOut()\r\n        history.replace('/')\r\n    }\r\n\r\n    function goUpload() {\r\n        history.replace('/account/upload')\r\n    }\r\n\r\n    function goStorage() {\r\n        history.replace('/account/storage')\r\n    }\r\n\r\n    function goShop() {\r\n        history.replace('/shop')\r\n    }\r\n\r\n    const [size, setSize] = React.useState(\"md\")\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    const handleClick = (newSize) => {\r\n        setSize(newSize)\r\n        onOpen()\r\n    }\r\n\r\n    const sizes = [\"xs\"]\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Navbar />\r\n\r\n                {/* <Menu>\r\n                    <MenuButton as={Button} bg=\"#F6AD55\" >\r\n                        Menu\r\n                </MenuButton>\r\n\r\n                    <MenuList>\r\n                        <MenuGroup>\r\n\r\n                            <MenuItem onClick={goStorage} > คลังสรุป </MenuItem>\r\n                            <MenuItem onClick={goUpload} > อัปโหลด</MenuItem>\r\n\r\n                            <MenuItem onClick={goShop} > ร้านค้า </MenuItem>\r\n                            <MenuItem onClick={logout} > ออกจากระบบ </MenuItem>\r\n\r\n                        </MenuGroup>\r\n                        <MenuDivider />\r\n\r\n                    </MenuList>\r\n                </Menu> */}\r\n\r\n                {/* <div>\r\n                    <p className=\"\">uid : {user.uid}</p>\r\n                    <p>name : {user.name}</p>\r\n                    <p>email : {user.email}</p>\r\n                    <p>qr_bank : {user.qr_bank}</p>\r\n                </div> */}\r\n\r\n                <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" align=\"center\" pt=\"5\">\r\n\r\n                    {/* <AspectRatio maxW=\"200px\" ratio={1}>  ******ใส่รูป*******\r\n                    <Image src={detail.imgUrl} />\r\n                </AspectRatio> */}\r\n\r\n                    <Box p=\"6\">\r\n                        <Box d=\"flex\" alignItems=\"baseline\">\r\n\r\n                            <Box\r\n                                color=\"gray.900\"\r\n                                fontWeight=\"semibold\"\r\n                                letterSpacing=\"wide\"\r\n                                fontSize=\"xs\"\r\n                                textTransform=\"uppercase\"\r\n                                ml=\"2\"\r\n                                \r\n                            >\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Box\r\n                            mt=\"1\"\r\n                            fontWeight=\"semibold\"\r\n                            as=\"h4\"\r\n                            lineHeight=\"tight\"\r\n                            isTruncated\r\n\r\n                        >\r\n                            <FormLabel className=\"text1\" bg=\"yellow\" > ชื่อ :  {user.name} </FormLabel>\r\n                            <FormLabel className=\"text1\"> อีเมล :  {user.email} </FormLabel>\r\n                            \r\n                        </Box>\r\n\r\n                    </Box>\r\n                </Box>\r\n\r\n                {sizes.map((size) => (\r\n                    <Button\r\n                        onClick={() => handleClick(size)}\r\n                        key={size}\r\n                        m={4}\r\n                    >{`เมนู`}</Button>\r\n                ))}\r\n\r\n                <Drawer onClose={onClose} isOpen={isOpen} size={size}>\r\n                    <DrawerOverlay>\r\n                        <DrawerContent>\r\n                            <DrawerHeader>\r\n                                <Center py={3}>\r\n                                    <Stack direction=\"row\" spacing={4} align=\"center\">\r\n                                        <Button colorScheme=\"teal\" variant=\"outline\" onClick={goUpload}>อัปโหลด</Button>\r\n                                        \r\n                                        <Button colorScheme=\"teal\" variant=\"outline\" onClick={goStorage}>คลังสรุป</Button>\r\n                                        <Button colorScheme=\"teal\" variant=\"outline\" onClick={goShop}>ร้านค้า</Button>\r\n                                        <Button colorScheme=\"teal\" variant=\"outline\" onClick={logout}>ออกจากระบบ</Button>\r\n                                    </Stack>\r\n                                </Center>\r\n\r\n                            </DrawerHeader>\r\n                            <DrawerBody>\r\n                                {size === \"full\"\r\n                                    ? `You're trapped 😆 , refresh the page to leave or press 'Esc' key.`\r\n                                    : null}\r\n                            </DrawerBody>\r\n                        </DrawerContent>\r\n                    </DrawerOverlay>\r\n                </Drawer>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\devcamp\\src\\App.js",[],{"ruleId":"77","severity":1,"message":"78","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":5,"column":16,"nodeType":"79","messageId":"80","endLine":5,"endColumn":24},{"ruleId":"77","severity":1,"message":"82","line":5,"column":26,"nodeType":"79","messageId":"80","endLine":5,"endColumn":34},{"ruleId":"77","severity":1,"message":"83","line":5,"column":36,"nodeType":"79","messageId":"80","endLine":5,"endColumn":47},{"ruleId":"77","severity":1,"message":"84","line":7,"column":22,"nodeType":"79","messageId":"80","endLine":7,"endColumn":28},{"ruleId":"77","severity":1,"message":"85","line":9,"column":5,"nodeType":"79","messageId":"80","endLine":9,"endColumn":21},{"ruleId":"77","severity":1,"message":"86","line":10,"column":5,"nodeType":"79","messageId":"80","endLine":10,"endColumn":19},{"ruleId":"77","severity":1,"message":"87","line":6,"column":5,"nodeType":"79","messageId":"80","endLine":6,"endColumn":16},{"ruleId":"77","severity":1,"message":"85","line":8,"column":5,"nodeType":"79","messageId":"80","endLine":8,"endColumn":21},{"ruleId":"77","severity":1,"message":"86","line":9,"column":5,"nodeType":"79","messageId":"80","endLine":9,"endColumn":19},{"ruleId":"77","severity":1,"message":"88","line":10,"column":5,"nodeType":"79","messageId":"80","endLine":10,"endColumn":10},{"ruleId":"89","severity":1,"message":"90","line":50,"column":8,"nodeType":"91","endLine":50,"endColumn":10,"suggestions":"92"},{"ruleId":"77","severity":1,"message":"93","line":6,"column":10,"nodeType":"79","messageId":"80","endLine":6,"endColumn":16},{"ruleId":"77","severity":1,"message":"94","line":6,"column":18,"nodeType":"79","messageId":"80","endLine":6,"endColumn":21},{"ruleId":"77","severity":1,"message":"95","line":13,"column":11,"nodeType":"79","messageId":"80","endLine":13,"endColumn":16},{"ruleId":"89","severity":1,"message":"96","line":26,"column":8,"nodeType":"97","endLine":26,"endColumn":54},{"ruleId":"98","severity":1,"message":"99","line":39,"column":29,"nodeType":"100","endLine":39,"endColumn":143},{"ruleId":"89","severity":1,"message":"96","line":27,"column":8,"nodeType":"97","endLine":27,"endColumn":63},{"ruleId":"98","severity":1,"message":"99","line":43,"column":33,"nodeType":"100","endLine":43,"endColumn":125},{"ruleId":"77","severity":1,"message":"101","line":7,"column":5,"nodeType":"79","messageId":"80","endLine":7,"endColumn":9},{"ruleId":"77","severity":1,"message":"102","line":8,"column":5,"nodeType":"79","messageId":"80","endLine":8,"endColumn":15},{"ruleId":"77","severity":1,"message":"103","line":9,"column":5,"nodeType":"79","messageId":"80","endLine":9,"endColumn":13},{"ruleId":"77","severity":1,"message":"104","line":10,"column":5,"nodeType":"79","messageId":"80","endLine":10,"endColumn":13},{"ruleId":"77","severity":1,"message":"105","line":11,"column":5,"nodeType":"79","messageId":"80","endLine":11,"endColumn":19},{"ruleId":"77","severity":1,"message":"106","line":13,"column":5,"nodeType":"79","messageId":"80","endLine":13,"endColumn":14},{"ruleId":"77","severity":1,"message":"107","line":14,"column":5,"nodeType":"79","messageId":"80","endLine":14,"endColumn":20},{"ruleId":"77","severity":1,"message":"108","line":15,"column":5,"nodeType":"79","messageId":"80","endLine":15,"endColumn":13},{"ruleId":"77","severity":1,"message":"109","line":16,"column":5,"nodeType":"79","messageId":"80","endLine":16,"endColumn":16},{"ruleId":"77","severity":1,"message":"110","line":17,"column":5,"nodeType":"79","messageId":"80","endLine":17,"endColumn":16},{"ruleId":"77","severity":1,"message":"111","line":20,"column":5,"nodeType":"79","messageId":"80","endLine":20,"endColumn":17},{"ruleId":"77","severity":1,"message":"112","line":24,"column":5,"nodeType":"79","messageId":"80","endLine":24,"endColumn":22},{"ruleId":"77","severity":1,"message":"87","line":28,"column":5,"nodeType":"79","messageId":"80","endLine":28,"endColumn":16},{"ruleId":"77","severity":1,"message":"85","line":30,"column":5,"nodeType":"79","messageId":"80","endLine":30,"endColumn":21},{"ruleId":"77","severity":1,"message":"86","line":31,"column":5,"nodeType":"79","messageId":"80","endLine":31,"endColumn":19},{"ruleId":"77","severity":1,"message":"88","line":32,"column":5,"nodeType":"79","messageId":"80","endLine":32,"endColumn":10},{"ruleId":"77","severity":1,"message":"113","line":33,"column":10,"nodeType":"79","messageId":"80","endLine":33,"endColumn":15},{"ruleId":"77","severity":1,"message":"114","line":33,"column":17,"nodeType":"79","messageId":"80","endLine":33,"endColumn":28},{"ruleId":"89","severity":1,"message":"115","line":61,"column":8,"nodeType":"91","endLine":61,"endColumn":14,"suggestions":"116"},"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'ListItem' is defined but never used.","'ListIcon' is defined but never used.","'OrderedList' is defined but never used.","'Center' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'FormControl' is defined but never used.","'Input' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDetail'. Either include it or remove the dependency array.","ArrayExpression",["117"],"'Button' is defined but never used.","'Nav' is defined but never used.","'style' is assigned a value but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","CallExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Menu' is defined but never used.","'MenuButton' is defined but never used.","'MenuList' is defined but never used.","'MenuItem' is defined but never used.","'MenuItemOption' is defined but never used.","'MenuGroup' is defined but never used.","'MenuOptionGroup' is defined but never used.","'MenuIcon' is defined but never used.","'MenuCommand' is defined but never used.","'MenuDivider' is defined but never used.","'DrawerFooter' is defined but never used.","'DrawerCloseButton' is defined but never used.","'Image' is defined but never used.","'AspectRatio' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'auth'. Either exclude it or remove the dependency array. Outer scope values like 'auth' aren't valid dependencies because mutating them doesn't re-render the component.",["118"],{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [fetchDetail]",{"range":"123","text":"124"},"Update the dependencies array to be: []",{"range":"125","text":"126"},[1285,1287],"[fetchDetail]",[1576,1582],"[]"]