[{"D:\\devcamp\\src\\Login.js":"1","D:\\devcamp\\src\\Shop.js":"2","D:\\devcamp\\src\\ProductDetail.js":"3","D:\\devcamp\\src\\Upload.js":"4"},{"size":1985,"mtime":1606884156122,"results":"5","hashOfConfig":"6"},{"size":3350,"mtime":1606890421987,"results":"7","hashOfConfig":"6"},{"size":2522,"mtime":1606892058550,"results":"8","hashOfConfig":"6"},{"size":4893,"mtime":1606892297181,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2xagdc",{"filePath":"12","messages":"13","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"D:\\devcamp\\src\\Login.js",[],"D:\\devcamp\\src\\Shop.js",["20","21","22","23","24"],"import React, { useEffect, useState } from 'react'\r\nimport Navbar from './components/Navbar';\r\nimport { db } from './firebase'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { List, ListItem, ListIcon, OrderedList } from \"@chakra-ui/react\"\r\n// import './css/App.css'\r\nimport { Box, Image, Center } from \"@chakra-ui/react\"\r\nimport { AspectRatio } from \"@chakra-ui/react\"\r\n\r\n\r\nconst Shop = () => {\r\n\r\n    const [alldata, setAlldata] = useState({\r\n        subject_code: [],\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = () => db.ref(`/file`).on('value', snapshot => {\r\n        const data = snapshot.val()\r\n        console.log(data)\r\n        if (data) {\r\n            setAlldata({\r\n                subject_code: Object.keys(data),\r\n                data: data\r\n            })\r\n        }\r\n    })\r\n\r\n    function toItem(ProductID) {\r\n        history.replace(`/shop/${ProductID}`)\r\n    }\r\n\r\n    const history = useHistory()\r\n\r\n    function goBack() {\r\n        history.replace('/account')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n\r\n\r\n\r\n            {alldata.subject_code.map((key) => {\r\n\r\n                return (\r\n                    <>\r\n                    <div>\r\n                        <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" align=\"center\" pt=\"5\">\r\n                            <AspectRatio maxW=\"200px\" ratio={1}>\r\n                                    <Image src={alldata.data[key].imgUrl} onClick={() => toItem(key)} />\r\n                            </AspectRatio>\r\n                            \r\n                            <Box p=\"6\">\r\n                                <Box d=\"flex\" alignItems=\"baseline\">\r\n\r\n                                    <Box\r\n                                        color=\"gray.500\"\r\n                                        fontWeight=\"semibold\"\r\n                                        letterSpacing=\"wide\"\r\n                                        fontSize=\"xs\"\r\n                                        textTransform=\"uppercase\"\r\n                                        ml=\"2\"\r\n                                    >\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                <Box\r\n                                    mt=\"1\"\r\n                                    fontWeight=\"semibold\"\r\n                                    as=\"h4\"\r\n                                    lineHeight=\"tight\"\r\n                                    isTruncated\r\n                                >\r\n                                   {alldata.data[key].subjectCode}<br></br> {alldata.data[key].name}\r\n                                </Box>\r\n\r\n                                <Box>\r\n                                    <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\r\n                                      50  บาท\r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </div>\r\n\r\n                        <br></br>\r\n\r\n\r\n                    </>\r\n                )\r\n            })}\r\n        <div align=\"center\">\r\n            <button className=\"cancel1\" onClick={goBack}>ย้อนกลับ</button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Shop","D:\\devcamp\\src\\ProductDetail.js",["25","26","27","28","29"],"D:\\devcamp\\src\\Upload.js",["30","31"],"import React from 'react'\r\nimport { auth, db, store } from './firebase'\r\nimport Navbar from './components/Navbar'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Input\r\n} from \"@chakra-ui/react\"\r\nimport './css/App.css'\r\n\r\nconst Upload = () => {\r\n    const [subject_code, setSubjectCode] = useState()\r\n    const [subject_name, setSubjectName] = useState()\r\n    const [description, setDescription] = useState()\r\n    const subjectCode = (e) => {\r\n        setSubjectCode(e.target.value)\r\n    }\r\n    const _description = (e) => {\r\n        setDescription(e.target.value)\r\n    }\r\n    const subjectName = (e) => {\r\n        setSubjectName(e.target.value)\r\n    }\r\n    const [file, setFile] = useState()\r\n    const [img, setImg] = useState()\r\n    const [name, setName] = useState()\r\n    const history = useHistory()\r\n    const Choose = event => {\r\n        const _file = event.target.files[0]\r\n        if (_file !== null) {\r\n            setFile(_file)\r\n        }\r\n    }\r\n    const UpImage = event => {\r\n        const _img = event.target.files[0]\r\n        if (_img !== null) {\r\n            setImg(_img)\r\n        }\r\n    }\r\n\r\n\r\n    db.ref(`/users/${localStorage.uid}`).once('value').then((snapshot) => {\r\n        setName(snapshot.val().name)\r\n    })\r\n\r\n    async function Upload() {\r\n        const file_ref = store.ref(localStorage.uid).child(file.name)\r\n        await file_ref.put(file)\r\n        const file_url = await file_ref.getDownloadURL()\r\n        console.log(file_url)\r\n        console.log(subject_code)\r\n\r\n        const img_ref = store.ref(subject_code).child(img.name)\r\n        await img_ref.put(img)\r\n        const img_url = await img_ref.getDownloadURL()\r\n\r\n        console.log(`/users/${localStorage.uid}/upload/${subject_code}`)\r\n\r\n        console.table({\r\n            subjectCode: subject_code,\r\n            fileUrl: file_url,\r\n            uid: auth.currentUser.uid,\r\n            name: subject_name,\r\n            description: description,\r\n            imgUrl: img_url,\r\n            author: name\r\n        })\r\n\r\n\r\n        await db.ref(`/users/${localStorage.uid}/upload/${subject_code}`).set({\r\n            subjectCode: subject_code,\r\n            fileUrl: file_url,\r\n            uid: auth.currentUser.uid,\r\n            name: subject_name,\r\n            description: description,\r\n            imgUrl: img_url,\r\n            author: name\r\n        })\r\n        await db.ref(`/file/${subject_code}`).set({\r\n            subjectCode: subject_code,\r\n            fileUrl: file_url,\r\n            uid: auth.currentUser.uid,\r\n            name: subject_name,\r\n            description: description,\r\n            imgUrl: img_url,\r\n            author: name\r\n        })\r\n        alert('Upload Success')\r\n    }\r\n\r\n    const Back = () => {\r\n        history.replace('/account')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <br></br>\r\n\r\n            {/* <div class=\"container-sm\"></div> */}\r\n\r\n            <FormControl id=\"subject-Code\">\r\n                <FormLabel className=\"text1\"> รหัสวิชา</FormLabel>\r\n                <Input className=\"inputBox2\" placeholder=\"ระบุรหัสวิชา\" type='text' onChange={subjectCode} />\r\n            </FormControl>\r\n\r\n            {/* <p>subject Code</p>\r\n            <input type='text' onChange={subjectCode} ></input> */}\r\n            <br></br>\r\n\r\n            <FormControl id=\"subject-Name\">\r\n                <FormLabel className=\"text1\"> ชื่อวิชา</FormLabel>\r\n                <Input className=\"inputBox2\" placeholder=\"ระบุชื่อวิชา\" type='text' onChange={subjectName} />\r\n            </FormControl>\r\n            <br></br>\r\n\r\n            <FormControl id=\"subject-Code\">\r\n                <FormLabel className=\"text1\"> รายละเอียด</FormLabel>\r\n                <Input className=\"inputBox2\" placeholder=\"รายละเอียด\" type='text' onChange={_description} />\r\n            </FormControl>\r\n\r\n            <br></br>\r\n\r\n            <FormLabel className=\"text1\"> เลือกรูปหน้าปก</FormLabel>\r\n            <input type=\"file\" onChange={UpImage} />\r\n\r\n            <br></br><br></br>\r\n\r\n            <FormLabel className=\"text1\">อัปโหลดไฟล์</FormLabel>\r\n            <input type=\"file\" id=\"file_choose\" onChange={Choose} />\r\n\r\n            {/* <input type=\"file\" id=\"file_choose\" onChange={Choose}/> */}\r\n            {/* <br></br><br></br> */}\r\n\r\n\r\n\r\n            <br></br>\r\n\r\n            <div align=\"center\">\r\n                <button className=\"cancel1\" id=\"file_upload\" onClick={Upload}>อัปโหลด</button>\r\n\r\n\r\n                <button className=\"cancel2\" onClick={Back}  >ยกเลิก</button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upload",{"ruleId":"32","severity":1,"message":"33","line":5,"column":10,"nodeType":"34","messageId":"35","endLine":5,"endColumn":14},{"ruleId":"32","severity":1,"message":"36","line":5,"column":16,"nodeType":"34","messageId":"35","endLine":5,"endColumn":24},{"ruleId":"32","severity":1,"message":"37","line":5,"column":26,"nodeType":"34","messageId":"35","endLine":5,"endColumn":34},{"ruleId":"32","severity":1,"message":"38","line":5,"column":36,"nodeType":"34","messageId":"35","endLine":5,"endColumn":47},{"ruleId":"32","severity":1,"message":"39","line":7,"column":22,"nodeType":"34","messageId":"35","endLine":7,"endColumn":28},{"ruleId":"32","severity":1,"message":"40","line":6,"column":5,"nodeType":"34","messageId":"35","endLine":6,"endColumn":16},{"ruleId":"32","severity":1,"message":"41","line":8,"column":5,"nodeType":"34","messageId":"35","endLine":8,"endColumn":21},{"ruleId":"32","severity":1,"message":"42","line":9,"column":5,"nodeType":"34","messageId":"35","endLine":9,"endColumn":19},{"ruleId":"32","severity":1,"message":"43","line":10,"column":5,"nodeType":"34","messageId":"35","endLine":10,"endColumn":10},{"ruleId":"44","severity":1,"message":"45","line":49,"column":8,"nodeType":"46","endLine":49,"endColumn":10,"suggestions":"47"},{"ruleId":"32","severity":1,"message":"41","line":9,"column":5,"nodeType":"34","messageId":"35","endLine":9,"endColumn":21},{"ruleId":"32","severity":1,"message":"42","line":10,"column":5,"nodeType":"34","messageId":"35","endLine":10,"endColumn":19},"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'ListItem' is defined but never used.","'ListIcon' is defined but never used.","'OrderedList' is defined but never used.","'Center' is defined but never used.","'FormControl' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'Input' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDetail'. Either include it or remove the dependency array.","ArrayExpression",["48"],{"desc":"49","fix":"50"},"Update the dependencies array to be: [fetchDetail]",{"range":"51","text":"52"},[1255,1257],"[fetchDetail]"]